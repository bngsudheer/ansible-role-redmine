---
# TODO
# SELinux policies
# TCP Socket with unicorn
# Tests
- name: Install the dependencies
  yum:
    state: installed
    name: "{{ item }}"
  with_items:
   - ruby-devel
   - ImageMagick-devel
   - gcc
   - patch
   - mariadb-devel
   - epel-release

- name: Install Nginx
  yum:
      state: installed
      name: nginx
  when: redmine_configure_nginx

- name: Enable Nginx server
  service:
      name: nginx
      state: started
      enabled: yes
  when: redmine_configure_nginx

- name: Create the Redmine user
  user:
      name: redmine

- name: Check whether Redmine is already downloaded
  stat: path={{ redmine_home }}
  register: redmine_cat

- name: Download Redmine
  get_url:
    url=http://www.redmine.org/releases/redmine-{{ redmine_version }}.tar.gz
    dest=/home/redmine/
  become: yes
  become_user: redmine
  when: redmine_cat.stat.exists == False

- name: Create redmine directory
  file:
      path: /home/redmine/redmine
      state: directory
  when: redmine_cat.stat.exists == False
  become: yes
  become_user: redmine

  # Ansible has a bug because of which you can't extract to destination directly via unarchive
  #  https://github.com/ansible/ansible-modules-core/issues/2480
  #  extra_opts: ['--strip-components=1'] also doesn't work
- name: Unpack Redmine source tarball
  unarchive:
    src: /home/redmine/redmine-{{ redmine_version }}.tar.gz
    dest: /home/redmine/
    copy: no
  become: yes
  become_user: redmine
  when: redmine_cat.stat.exists == False

- name: copy source files
  shell: "mv /home/redmine/redmine-{{ redmine_version }}/* /home/redmine/redmine/"
  become: yes
  become_user: redmine
  when: redmine_cat.stat.exists == False

- name: remove the unused files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
      - /home/redmine/redmine-{{ redmine_version }}
      - /home/redmine/redmine-{{ redmine_version }}.tar.gz
  become: yes
  become_user: redmine
  when: redmine_cat.stat.exists == False

- name: Install the required gems - bundler
  gem:
      name: bundler
      state: present
      user_install: yes
      version: 1.15.4
  become: yes
  become_user: redmine

- name: Upload the Redmine configuration file
  template:
     src: database.yml
     dest: "{{ redmine_home }}/config/"
  become: yes
  become_user: redmine

- name: Install the required gems via bundler
  become: yes
  become_user: redmine
  shell: /home/redmine/bin/bundler install
  args:
    chdir: "{{ redmine_home }}"

- name: Generate secret token
  become: yes
  become_user: redmine
  shell: /home/redmine/bin/bundle exec /home/redmine/bin/rake generate_secret_token
  args:
    chdir: "{{ redmine_home }}"

- name: DB Migrate
  shell: RAILS_ENV=production /home/redmine/bin/bundle exec /home/redmine/bin/rake db:migrate
  become: yes
  become_user: redmine
  args:
    chdir: "{{ redmine_home }}"

- name: Local gemfile
  template:
   src: Gemfile.local
   dest: "{{ redmine_home }}"

- name: Install the required gems via bundler  - unicorn
  become: yes
  become_user: redmine
  shell: /home/redmine/bin/bundler install
  args:
    chdir: "{{ redmine_home }}"

- name: Create directories for shared resources
  file:
   path: "{{ redmine_home }}/shared/{{ item }}"
   state: directory
  with_items:
   - config/redmine
   - log/redmine
   - pid/redmine
   - socket/redmine
  become: yes
  become_user: redmine

- name: unicorn.conf.rb file
  template:
      src: unicorn.conf.rb
      dest: "{{ redmine_home }}/shared/config/redmine/"
  become: yes
  become_user: redmine

# This is handled by systemd
# - name: run directory
#   file:
#       path: /var/run/redmine
#       state: directory
#       owner: redmine
#       group: redmine

# - name: Redmine start and stop scripts
#   template:
#     src: "{{ item }}"
#     dest: /home/redmine/bin/
#     mode: u+x
#   with_items:
#     - stop-redmine-unicorn
#     - start-redmine-unicorn
#   become: yes
#   become_user: redmine

- name: Systemd script
  template:
      src: usr/lib/systemd/system/redmine.service
      dest: /usr/lib/systemd/system/


- name: temp dir
  file:
    path: "{{ redmine_home }}/{{ item }}"
    state: directory
    owner: redmine
    group: redmine
    mode: 0755
  with_items:
   - "tmp/pdf"
   - "public/plugin_assets"
   - "files"
   - "log"

# Need to set lang here
# and an option to install demo data
# RAILS_ENV=production REDMINE_LANG=fr bundle exec rake redmine:load_default_data
# - name: Default data
#   shell: RAILS_ENV=production REDMINE_LANG=en /home/redmine/bin/bundle exec /home/redmine/bin/rake redmine:load_default_data
#   become: yes
#   become_user: redmine
#   args:
#     chdir: "{{ redmine_home }}"

- name: firewall open http and https ports
  firewalld:
    permanent: "{{ item[1] }}"
    service: "{{ item[0] }}"
    state: enabled
    zone: public
  with_nested:
    - [ 'http', 'https']
    - [yes, no]
  notify:
   - Firewalld restart
  when: redmine_configure_firewalld

- name: Permissions for Nginx to read Redmine files
  file:
    path: "{{ item }}"
    recurse: yes
    mode: o+rx
  with_items:
    - /home/redmine
    - /var/run/redmine
  when: redmine_configure_nginx

- name: Nginx configuration
  template:
    src: redmine.conf
    dest: /etc/nginx/conf.d/
  notify:
   - Nginx reload
  when: redmine_configure_nginx

- name: Enable redmine systemd unit
  service:
    name: redmine
    state: started
    enabled: yes

- name: Install Redmine plugins
  include_tasks: install_plugin.yml
  with_items: "{{ redmine_plugins }}"
  become: yes
  become_user: redmine
