---
- name: debug plugin info
  debug:
    msg: item details "{{ item }}"

- name: Stat the plugin directory
  stat:
    path: "{{ redmine_home }}/plugins/{{ item.base_name }}"
  register: plugin_directory_stat

- name: Download plugin
  get_url:
    url: "{{ item.url }}"
    dest: "{{ redmine_home }}/plugins/"
  when: plugin_directory_stat.stat.exists == False
  register: plugin_download
  become: true
  become_user: redmine

- name: Debug plugin_download
  debug:
    msg: "{{ plugin_download }}"
    verbosity: 3
  when: plugin_directory_stat.stat.exists == False

- name: Create plugin base directory
  file:
    path: "{{ redmine_home }}/plugins/{{ item.base_name }}"
    state: directory
  become: true
  become_user: redmine
  when: item.create_base_directory

- name: Set plugin archvie extraction target path - archive contains base_name root directory
  set_fact:
    plugin_directory: "{{ redmine_home }}/plugins/"
  when: item.create_base_directory == False

- name: Set plugin archvie extraction target path - archive does not contains base_name root directory
  set_fact:
    plugin_directory: "{{ redmine_home }}/plugins/"
  when: item.create_base_directory

- name: debug target dir
  debug:
    msg: "{{plugin_directory}}"

- name: Extract plugin
  unarchive:
    remote_src: true
    dest: "{{ plugin_directory }}"
    src: "{{ plugin_download.dest }}"
  when: plugin_directory_stat.stat.exists == False
  become: true
  become_user: redmine


- name: Rename plugin mapping directory
  command: mv "{{ redmine_home }}/plugins/{{ item.map_directory.src}}" "{{ redmine_home }}/plugins/{{ item.map_directory.dest}}"
  args:
    creates: "{{ redmine_home }}/.ansible-plugin-{{ item.base_name }}.creates"
  register: mapping_creates
  when:
    - item.map_directory is defined
    - item.map_directory

- name: Creates file for plugin mapping directory task
  file:
      path: "{{ redmine_home }}/.ansible-plugin-{{ item.base_name }}.creates"
      state: touch
  when: mapping_creates.changed
  tags:
    - skip_ansible_lint

- name: Plugins migrate
  environment:
    RAILS_ENV: production
  shell: /home/redmine/bin/bundle exec /home/redmine/bin/rake redmine:plugins:migrate
  args:
    chdir: "{{ redmine_home }}"
  notify:
    redmine restart
  when: plugin_download.changed
  tags:
    - skip_ansible_lint
  become: true
  become_user: redmine
